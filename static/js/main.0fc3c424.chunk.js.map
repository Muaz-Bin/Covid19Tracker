{"version":3,"sources":["assets/img/logo.png","components/Cards/Cards.jsx","components/Chart/Chart.jsx","App.js","index.js"],"names":["module","exports","Cards","title","casesValue","Update","className","Card","CardContent","Typography","color","gutterBottom","variant","component","separator","end","Date","toDateString","Chart","dailyData","countryData","countryName","barData","labels","datasets","label","backgroundColor","borderWidth","data","confirmed","value","recovered","deaths","lineData","map","reportDate","borderColor","totalConfirmed","total","totalRecovered","options","display","text","fontSize","legend","position","App","useState","WorldData","setWorldData","DailyData","setDailyData","CountryData","setCountryData","CountryName","setCountryName","Query","setQuery","Axios","defaults","headers","post","useEffect","a","get","proxy","host","port","then","response","console","log","catch","e","wholeData","names","countries","GetData","src","require","alt","infoData","lastUpdate","FormControl","InputLabel","htmlFor","NativeSelect","onChange","target","inputProps","name","id","index","key","ReactDOM","render","document","getElementById"],"mappings":"6FAAAA,EAAOC,QAAU,IAA0B,kC,mLC8B5BC,EAxBD,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UAC1C,OACE,6BACE,kBAACC,EAAA,EAAD,CAAMD,UAAWA,EAAY,SAC3B,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAC3CR,GAEH,kBAACM,EAAA,EAAD,CAAYG,QAAQ,KAAKC,UAAU,MACjC,kBAAC,IAAD,CAASC,UAAU,IAAIC,IAAKX,KAE9B,kBAACK,EAAA,EAAD,CAAYC,MAAM,iBACf,IAAIM,KAAKX,GAAQY,gBAEpB,kBAACR,EAAA,EAAD,CAAYG,QAAQ,QAAQC,UAAU,KAAtC,wCAEE,kC,gBCmEGK,EAtFD,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,UAAWC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,YACjCC,EAAU,CACdC,OAAQ,CAAC,YAAa,YAAa,UACnCC,SAAU,CACR,CACEC,MAAO,SACPC,gBAAiB,CACf,uBACA,uBACA,wBAEFC,YAAa,EACbC,KAAMR,GAAe,CACnBA,EAAYS,UAAUC,MACtBV,EAAYW,UAAUD,MACtBV,EAAYY,OAAOF,UAMrBG,EAAW,CACfV,OAAQJ,GAAaA,EAAUe,KAAI,SAACJ,GAAD,OAAWA,EAAMK,cACpDX,SAAU,CACR,CACEC,MAAO,YACPC,gBAAiB,0BACjBU,YAAa,UACbT,YAAa,EACbC,KAAMT,GAAaA,EAAUe,KAAI,SAACJ,GAAD,OAAWA,EAAMO,mBAEpD,CACEZ,MAAO,SACPC,gBAAiB,wBACjBU,YAAa,UACbT,YAAa,EACbC,KAAMT,GAAaA,EAAUe,KAAI,SAACJ,GAAD,OAAWA,EAAME,OAAOM,UAE3D,CACEb,MAAO,WACPC,gBAAiB,wBACjBU,YAAa,UACbT,YAAa,EACbC,KAAMT,GAAaA,EAAUe,KAAI,SAACJ,GAAD,OAAWA,EAAMS,qBAIxD,OACE,6BACGnB,GACC,kBAAC,MAAD,CACEQ,KAAMN,EACNkB,QAAS,CACPrC,MAAO,CACLsC,SAAS,EACTC,KAAMrB,EACNsB,SAAU,IAEZC,OAAQ,CACNH,SAAS,EACTI,SAAU,UAMjB1B,GACC,kBAAC,OAAD,CACES,KAAMK,EACNO,QAAS,CACPrC,MAAO,CACLsC,SAAS,EACTC,KAAM,SACNC,SAAU,IAEZC,OAAQ,CACNH,SAAS,EACTI,SAAU,Y,2BCwGTC,MA9Kf,WAAgB,IAAD,EACqBC,qBADrB,mBACNC,EADM,KACKC,EADL,OAEqBF,qBAFrB,mBAENG,EAFM,KAEKC,EAFL,OAGyBJ,qBAHzB,mBAGNK,EAHM,KAGOC,EAHP,OAIyBN,qBAJzB,mBAINO,EAJM,KAIOC,EAJP,OAKaR,mBAAS,SALtB,mBAKNS,EALM,KAKCC,EALD,KA2Fb,OApFAC,IAAMC,SAASC,QAAQC,KAAK,+BAAiC,IAE7DC,qBAAU,YACK,uCAAG,kCAAAC,EAAA,6DAmBdL,IAAMM,IAAI,4CAA6C,CACrDJ,QAAS,CACP,8BAA+B,IAE/B,eAAgB,qCAElBK,MAAO,CACLC,KAAM,mBACNC,KAAM,OAGPC,MAAK,SAACC,GACLC,QAAQC,IAAI,YAAaF,MAE1BG,OAAM,SAACC,GACNH,QAAQC,IAAI,SAAUE,MAlCZ,SAqCUf,IAAMM,IAAI,mCArCpB,cAqCRU,EArCQ,OAsCdzB,EAAayB,EAAU9C,MAtCT,SAwDM8B,IAAMM,IAAI,4CAxDhB,UAwDRW,EAxDQ,OAyDdpB,EAAeoB,EAAM/C,KAAKgD,WAEZ,UAAVpB,EA3DU,kCA4DYE,IAAMM,IAC5B,wCA7DU,QA4DN7C,EA5DM,OA+DZgC,EAAahC,EAAUS,MACvByB,EAAe,MAhEH,yCAkEcK,IAAMM,IAAN,mDACoBR,IAnElC,QAkENpC,EAlEM,OAqEZ+B,EAAa,MACbE,EAAejC,EAAYQ,MAtEf,4CAAH,qDA0EbiD,KACC,CAACrB,IAOF,yBAAKlD,UAAU,aACb,yBAAKA,UAAU,oBACb,yBACEA,UAAU,YACVwE,IAAKC,EAAQ,KACbC,IAAI,MAIR,6BAAS1E,UAAU,QAChB0C,GACC,yBAAK1C,UAAU,OACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,kBAAC,EAAD,CACEA,UAAU,WACV2E,SAAUjC,EACV7C,MAAM,WACNC,WAAY4C,EAAUnB,UAAUC,MAChCzB,OAAQ2C,EAAUkC,cAGtB,yBAAK5E,UAAU,YACb,kBAAC,EAAD,CACEA,UAAU,YACV2E,SAAUjC,EACV7C,MAAM,YACNC,WAAY4C,EAAUjB,UAAUD,MAChCzB,OAAQ2C,EAAUkC,cAGtB,yBAAK5E,UAAU,YACb,kBAAC,EAAD,CACEA,UAAU,SACV2E,SAAUjC,EACV7C,MAAM,SACNC,WAAY4C,EAAUhB,OAAOF,MAC7BzB,OAAQ2C,EAAUkC,iBAO9B,6BAAS5E,UAAU,oBACjB,yBAAKA,UAAU,OACb,yBAAKA,UAAU,oBACb,kBAAC6E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,qBAApB,WACA,kBAACC,EAAA,EAAD,CACExD,MAAO0B,EACP+B,SAzDY,SAACd,GAC3BhB,EAASgB,EAAEe,OAAO1D,QAyDJ2D,WAAY,CACVC,KAAM,MACNC,GAAI,sBAGN,4BAAQ7D,MAAM,SAAd,OACCwB,GACCA,EAAYpB,KAAI,SAACJ,EAAO8D,GACtB,OACE,4BAAQC,IAAKD,EAAO9D,MAAOA,EAAM4D,MAC9B5D,EAAM4D,cASzB,kBAAC,EAAD,CACEvE,UAAW+B,EACX9B,YAAagC,EACb/B,YAAamC,OC9KvBsC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.0fc3c424.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.889609ca.png\";","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CountUp from \"react-countup\";\r\n\r\nconst Cards = ({ title, casesValue, Update, className }) => {\r\n  return (\r\n    <div>\r\n      <Card className={className + \" py-3\"}>\r\n        <CardContent>\r\n          <Typography color=\"textSecondary\" gutterBottom>\r\n            {title}\r\n          </Typography>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            <CountUp separator=\",\" end={casesValue} />\r\n          </Typography>\r\n          <Typography color=\"textSecondary\">\r\n            {new Date(Update).toDateString()}\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            Number of active cases from COVID-19.\r\n            <br />\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\nimport { Bar, Line } from \"react-chartjs-2\";\r\n\r\nconst Chart = ({ dailyData, countryData, countryName }) => {\r\n  const barData = {\r\n    labels: [\"confirmed\", \"recovered\", \"deaths\"],\r\n    datasets: [\r\n      {\r\n        label: \"people\",\r\n        backgroundColor: [\r\n          \"rgba(0, 0, 255, 0.5)\",\r\n          \"rgba(0, 255, 0, 0.5)\",\r\n          \"rgba(255, 0, 0, 0.5)\",\r\n        ],\r\n        borderWidth: 3,\r\n        data: countryData && [\r\n          countryData.confirmed.value,\r\n          countryData.recovered.value,\r\n          countryData.deaths.value,\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const lineData = {\r\n    labels: dailyData && dailyData.map((value) => value.reportDate),\r\n    datasets: [\r\n      {\r\n        label: \"confirmed\",\r\n        backgroundColor: \"rgba(137, 137, 240,0.5)\",\r\n        borderColor: \"#8989F0\",\r\n        borderWidth: 2,\r\n        data: dailyData && dailyData.map((value) => value.totalConfirmed),\r\n      },\r\n      {\r\n        label: \"deaths\",\r\n        backgroundColor: \"rgba(254, 42, 42,0.7)\",\r\n        borderColor: \"#FE2A2A\",\r\n        borderWidth: 2,\r\n        data: dailyData && dailyData.map((value) => value.deaths.total),\r\n      },\r\n      {\r\n        label: \"recovers\",\r\n        backgroundColor: \"rgba(62, 190, 62,0.7)\",\r\n        borderColor: \"#3EBE3E\",\r\n        borderWidth: 2,\r\n        data: dailyData && dailyData.map((value) => value.totalRecovered),\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <div>\r\n      {countryData && (\r\n        <Bar\r\n          data={barData}\r\n          options={{\r\n            title: {\r\n              display: true,\r\n              text: countryName,\r\n              fontSize: 20,\r\n            },\r\n            legend: {\r\n              display: true,\r\n              position: \"top\",\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {dailyData && (\r\n        <Line\r\n          data={lineData}\r\n          options={{\r\n            title: {\r\n              display: true,\r\n              text: \"Global\",\r\n              fontSize: 20,\r\n            },\r\n            legend: {\r\n              display: true,\r\n              position: \"top\",\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Axios from \"axios\";\nimport Cards from \"./components/Cards/Cards\";\nimport \"./assets/css/style.css\";\nimport Chart from \"./components/Chart/Chart\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nfunction App() {\n  const [WorldData, setWorldData] = useState();\n  const [DailyData, setDailyData] = useState();\n  const [CountryData, setCountryData] = useState();\n  const [CountryName, setCountryName] = useState();\n  const [Query, setQuery] = useState(\"daily\");\n\n  Axios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\n\n  useEffect(() => {\n    const GetData = async () => {\n      // const otherData = Axios.get(\n      //   \" http://metar.vatsim.net/metar.php?id=EHAM\",\n      //   {\n      //     headers: {\n      //       \"Access-Control-Allow-Origin\": \"*\",\n      //       \"Access-Control-Allow-Headers\":\n      //         \"Origin, X-Requested-With, Content-Type, Accept\",\n\n      //       \"Content-Type\": \"application/x-www-form-urlencoded\",\n      //     },\n      //     proxy: {\n      //       host: \"172.67.68.102:80\",\n      //       port: 3000,\n      //     },\n      //   }\n      // );\n      // console.log(otherData.data);\n\n      Axios.get(\"http://metar.vatsim.net/metar.php?id=EHAM\", {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        proxy: {\n          host: \"172.67.68.102:80\",\n          port: 3000,\n        },\n      })\n        .then((response) => {\n          console.log(\"Response:\", response);\n        })\n        .catch((e) => {\n          console.log(\"Error:\", e);\n        });\n\n      const wholeData = await Axios.get(\"https://covid19.mathdro.id/api/\");\n      setWorldData(wholeData.data);\n\n      // var url = \"http://metar.vatsim.net/metar.php?id=EHAM\";\n\n      // var xhr = new XMLHttpRequest();\n      // xhr.open(\"GET\", url);\n\n      // xhr.setRequestHeader(\"Access-Control-Allow-Origin\", \"*\");\n\n      // xhr.onreadystatechange = function () {\n      //   if (xhr.readyState === 4) {\n      //     console.log(xhr.status);\n      //     console.log(xhr.responseText);\n      //   }\n      // };\n\n      // xhr.send();\n\n      const names = await Axios.get(\"https://covid19.mathdro.id/api/countries\");\n      setCountryName(names.data.countries);\n\n      if (Query === \"daily\") {\n        const dailyData = await Axios.get(\n          \"https://covid19.mathdro.id/api/daily\"\n        );\n        setDailyData(dailyData.data);\n        setCountryData(null);\n      } else {\n        const countryData = await Axios.get(\n          `https://covid19.mathdro.id/api/countries/${Query}`\n        );\n        setDailyData(null);\n        setCountryData(countryData.data);\n      }\n    };\n\n    GetData();\n  }, [Query]);\n\n  const handleCountryChange = (e) => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"logo text-center\">\n        <img\n          className=\"img-fluid\"\n          src={require(\"./assets/img/logo.png\")}\n          alt=\"\"\n        />\n      </div>\n\n      <section className=\"py-5\">\n        {WorldData && (\n          <div className=\"row\">\n            <div className=\"col-md-8 mx-auto\">\n              <div className=\"row\">\n                <div className=\"col-md-4\">\n                  <Cards\n                    className=\"infected\"\n                    infoData={WorldData}\n                    title=\"Infected\"\n                    casesValue={WorldData.confirmed.value}\n                    Update={WorldData.lastUpdate}\n                  />\n                </div>\n                <div className=\"col-md-4\">\n                  <Cards\n                    className=\"recovered\"\n                    infoData={WorldData}\n                    title=\"recovered\"\n                    casesValue={WorldData.recovered.value}\n                    Update={WorldData.lastUpdate}\n                  />\n                </div>\n                <div className=\"col-md-4\">\n                  <Cards\n                    className=\"deaths\"\n                    infoData={WorldData}\n                    title=\"Deaths\"\n                    casesValue={WorldData.deaths.value}\n                    Update={WorldData.lastUpdate}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n        <section className=\"py-5 text-center\">\n          <div className=\"row\">\n            <div className=\"col-md-5 mx-auto\">\n              <FormControl>\n                <InputLabel htmlFor=\"age-native-helper\">Country</InputLabel>\n                <NativeSelect\n                  value={Query}\n                  onChange={handleCountryChange}\n                  inputProps={{\n                    name: \"age\",\n                    id: \"age-native-helper\",\n                  }}\n                >\n                  <option value=\"daily\">All</option>\n                  {CountryName &&\n                    CountryName.map((value, index) => {\n                      return (\n                        <option key={index} value={value.name}>\n                          {value.name}\n                        </option>\n                      );\n                    })}\n                </NativeSelect>\n              </FormControl>\n            </div>\n          </div>\n        </section>\n        <Chart\n          dailyData={DailyData}\n          countryData={CountryData}\n          countryName={Query}\n        />\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}